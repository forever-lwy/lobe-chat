name: Publish Database Docker Image

on:
  workflow_dispatch: # 允许手动触发
  workflow_run: # 当其他工作流运行时触发
    workflows: ["Upstream Sync"] # 指定触发此工作流的源工作流名称 (来自 sync.yml 的 name)
    types:
      - completed # 仅在源工作流完成时触发

env:
  REGISTRY_IMAGE: foreveryu/lobe-chat-database

jobs:
  build_and_push:
    name: Build and Push Docker Image
    # 当手动触发 或 触发的 workflow_run 事件是成功的 sync.yml 运行时才执行
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      # 当由 workflow_run 触发时，actions/checkout 会自动检出
      # 触发工作流 (sync.yml) 运行时的那个 commit SHA。
      # 这正是 sync.yml 推送到 main 分支的最新代码。
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 不需要指定 ref，它会自动使用触发 workflow_run 的 commit
          fetch-depth: 0 # 获取所有历史记录以确保能获取 commit SHA

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Generate Image Tag
        id: generate_tag
        run: |
          # 使用 github.sha，它代表触发此运行的 commit
          echo "IMAGE_TAG=$(date +'%Y%m%d-%H%M%S')-$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.database
          platforms: linux/amd64
          push: true
          tags: | # 使用多行字符串来指定多个标签
            ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
